[tool.poetry]
name = "async-learn"
version = "0.9.0"
description = "asyncio learn"
authors = ["KAWAI Shun <mypaceshun@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [
{include = "async_learn", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.7"
rich = "^13.6.0"
aioldap = "^0.4.3"
python-ldap = "^3.4.3"
requests = "^2.31.0"
pymysql = "^1.1.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pyproject-flake8 = "^6.1.0"
autoflake = "^2.2.1"
isort = "^5.12.0"
black = "^23.9.1"
mypy = "^1.6.0"
types-requests = "^2.31.0.9"

[tool.poe.tasks.run]
script = "async_learn.command:cli"
help = "run script"


[tool.poe.tasks.lint]
sequence = [
  { cmd = "pflake8 src/" },
  { cmd = "mypy src/" }
]
help = "run style check"

[tool.poe.tasks.format]
sequence = [
  { cmd = "autoflake -ir --remove-all-unused-imports --ignore-init-module-imports src/ tests/" },
  { cmd = "isort src/ tests/" },
  { cmd = "black src/ tests/" },
  "lint"
]
help = "run code formatter"

[tool.flake8]
max-line-length = 88
exclude = "migrations"

[tool.isort]
profile = "black"

[[tool.mypy.overrides]]
module = [
  "ldap",
  "ldap.ldapobject",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
